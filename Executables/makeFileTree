#! /usr/bin/perl -w


BEGIN {
    unless ($ENV{DOCTOOL}) {
        $ENV{DOCTOOL} = "/Users/lehn/Documents/DocTool";

        print "[INFO] Environment variable DOCTOOL not set.\n";
        print "[INFO] Using default value \"$ENV{DOCTOOL}\"\n";
    } else {
        print "[INFO] Using DocTool: \$ENV{DOCTOOL}=\"$ENV{DOCTOOL}\"\n";
    }

    unshift(@INC, "$ENV{DOCTOOL}/Library");
    unshift(@INC, "$ENV{DOCTOOL}/Library/Components");
    unshift(@INC, "$ENV{DOCTOOL}/Library/Tools");
}

use DocUtils;

BEGIN {
    DocUtils->EvalConfigFile(file => "doctool.preconfig");
    DocUtils->EvalConfigFile(file => "$ENV{DOCTOOL}/Configuration/doctool.config");
    DocUtils->EvalConfigFile(file => "doctool.postconfig");
}

use DocEnv;
use SourceFiles;
use Html;
#use FileTree;

my @allFiles  = SourceFiles->GetAllFiles();

# foreach my $item (@allFiles) {
#     print "$item\n";
# }
# print "\n--------------------\n";

my %allDirs = ("" => 1);
for my $file (@allFiles) {
    if ($file =~ /\]$/) {
        my $dir = $file;
        $dir =~ s/[^\/]*$//;
        $allDirs{$dir} = 1;
    }
}

print "total# of dirs = ", scalar(keys %allDirs), "\n";
foreach my $dir (sort keys %allDirs) {
    print "[INFO] Processing directory $dir ...\n";

    my $docEnv = DocEnv->new(sourceFile => join("/", $dir, "dir.html"));

    my $dirId = "dir:$dir";
    $dirId =~ s/\/$//;

    SourceFiles->CreateTree(docEnv   => $docEnv,
                            allFiles => \@allFiles,
                            expand   => $dir,
                            documentId    => $dirId);
    print "[INFO]  ... created ", $docEnv->{outputFile}, "\n";
}


my $from = Link->LookUpDocumentId(documentId => "dir:flens/lapack/test");


my $html = Html->MakeLink(fromDocEnv => $from,
                          toDocEnv => "dir:flens");

print "$html\n";


